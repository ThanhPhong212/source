openapi: '3.0.2'
servers:
  - url: 'http://localhost:7070'
  - url: 'http://54.179.172.33:7070'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
  - name: authenticate
    description: Get Token to access api
  - name: user
    description: Everything about User

paths:
  /v1/users/login:
    post:
      tags:
        - user
      summary: 'Login and get the token to access App'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  example: '0938803794'
                password:
                  type: string
                  example: 'Admin@123'
      responses:
        '200':
          description: Successful operation

  /v1/auth/refresh-token:
    post:
      security:
        - bearerAuth: []
      tags:
        - authenticate
      summary: 'get the token with refresh token access App'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: Successful operation

  /v1/users:
    get:
      security:
        - bearerAuth: []
      tags:
        - user
      summary: 'Lấy thông tin user theo token'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      responses:
        '200':
          description: Successful operation

    post:
      security:
        - bearerAuth: []
      tags:
        - user
      summary: 'Cập nhật thông tin người dùng'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                fullName:
                  type: string
                birthday:
                  type: string
                gender:
                  type: string
                  enum: [0, 1, 2]
                  description: '0: Nam, 1: Nữ, 2: Khác'
                email:
                  type: string
                country:
                  type: string
                typeIdCard:
                  type: string
                  enum: [CARD, PASSPORT]
                dateOfIssue:
                  type: string
                placeOfIssue:
                  type: string
                numberIdentify:
                  type: string
                imageFront:
                  type: string
                imageBackside:
                  type: string
      responses:
        '200':
          description: Update successful
        '400':
          description: Update failure
